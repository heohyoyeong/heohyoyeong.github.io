<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="http://localhost:4000/author/heohyoyeong/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2020-08-03T18:04:20+09:00</updated>
  <id>http://localhost:4000/author/heohyoyeong/feed.xml</id>

  
  
  

  
    <title type="html">AI with vehicle | </title>
  

  
    <subtitle>AI와 자동차의 만남</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Python Django - Django 투표 프로젝트 투표 목록 제작</title>
      <link href="http://localhost:4000/python-Django-3" rel="alternate" type="text/html" title="Python Django - Django 투표 프로젝트 투표 목록 제작" />
      <published>2020-08-03T02:40:00+09:00</published>
      <updated>2020-08-03T02:40:00+09:00</updated>
      <id>http://localhost:4000/python-Django-3</id>
      <content type="html" xml:base="http://localhost:4000/python-Django-3">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 문자열&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-1&quot;&gt;Python Django - Django 시작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-2&quot;&gt;Python Django - Django 투표 프로젝트 model 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-3&quot;&gt;Python Django - Django 투표 프로젝트 투표 목록 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-4&quot;&gt;Python Django - Django 투표 프로젝트 투표 보기 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-5&quot;&gt;Python Django - Django 투표 프로젝트 투표 결과 제작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
&lt;h3&gt;프로젝트의 url수정&lt;/h3&gt;
&lt;li&gt;mysite의 url을 수정해볼것입니다.&lt;/li&gt;
&lt;li&gt;아래의 그림과 같이 mysite의 url.py파일을 수정해줄것입니다.&lt;img src=&quot;assets/built/images/django-mysiteurl.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;기본으로 존재하던 admin에 관련된 path는 그대로 두겠습니다. &lt;/li&gt;
&lt;li&gt;새롭게 추가될 application을 반영하기 위하여 poll의 url을 path에 추가해야합니다.&lt;/li&gt;
&lt;li&gt;물론 여기서 직접 입력해도 되지만 추후 정리를 위하여 include함수를 사용하여 polls.url을 원격으로 지정해주겠습니다.&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;index를 위한 url제작&lt;/h3&gt;
&lt;li&gt;이제 polls의 index의 url을 제작해볼것입니다.&lt;/li&gt;
&lt;li&gt;아래의 그림과 같이 mysite의 url.py파일을 수정해줄것입니다.&lt;img src=&quot;assets/built/images/django-pollsurl1.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;index를 위한 views를 제작&lt;/h3&gt;
&lt;li&gt;이제 polls의 index의 views를 제작해볼것입니다.&lt;/li&gt;
&lt;li&gt;아래의 그림과 같이 mysite의 views.py파일을 수정해줄것입니다.&lt;img src=&quot;assets/built/images/django-viewsindex.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;index.html 제작&lt;/h3&gt;
&lt;li&gt;이전에 제작하였던 models.py에서 Question class는 question_text를 return합니다.&lt;/li&gt;
&lt;li&gt;우리는 question_text을 html에 띄워 선택할수있는 html을 제작할것입니다.&lt;/li&gt;
&lt;li&gt;앞의 view.py에서 정의한 index함수의 context의 내부에 &quot;latest_question_list&quot;를 활용해야합니다.&lt;img src=&quot;assets/built/images/django-templatesindex.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;위의 그림과 같이 index.html를 설정하였습니다. &lt;/li&gt;
&lt;li&gt;위의 결과를 통해 서버를 가동후 &quot;http://127.0.0.1:8000/polls/&quot;에 들어가면 아래와 같이 나온다.&lt;img src=&quot;assets/built/images/django-templatesindexff.PNG&quot; /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 문자열 Python 강좌(2) - Python 제어문 Python Django - Django 시작 Python Django - Django 투표 프로젝트 model 제작 Python Django - Django 투표 프로젝트 투표 목록 제작 Python Django - Django 투표 프로젝트 투표 보기 제작 Python Django - Django 투표 프로젝트 투표 결과 제작 프로젝트의 url수정 mysite의 url을 수정해볼것입니다. 아래의 그림과 같이 mysite의 url.py파일을 수정해줄것입니다. 기본으로 존재하던 admin에 관련된 path는 그대로 두겠습니다. 새롭게 추가될 application을 반영하기 위하여 poll의 url을 path에 추가해야합니다. 물론 여기서 직접 입력해도 되지만 추후 정리를 위하여 include함수를 사용하여 polls.url을 원격으로 지정해주겠습니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python Django - Django 투표 프로젝트 투표 보기 제작</title>
      <link href="http://localhost:4000/python-Django-4" rel="alternate" type="text/html" title="Python Django - Django 투표 프로젝트 투표 보기 제작" />
      <published>2020-08-03T02:40:00+09:00</published>
      <updated>2020-08-03T02:40:00+09:00</updated>
      <id>http://localhost:4000/python-Django-4</id>
      <content type="html" xml:base="http://localhost:4000/python-Django-4">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 문자열&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-1&quot;&gt;Python Django - Django 시작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-2&quot;&gt;Python Django - Django 투표 프로젝트 model 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-3&quot;&gt;Python Django - Django 투표 프로젝트 투표 목록 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-4&quot;&gt;Python Django - Django 투표 프로젝트 투표 보기 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-5&quot;&gt;Python Django - Django 투표 프로젝트 투표 결과 제작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div&gt;
&lt;h3&gt;index를 위한 url제작&lt;/h3&gt;
&lt;li&gt;이제 polls의 index의 url을 제작해볼것입니다.&lt;/li&gt;
&lt;li&gt;아래의 그림과 같이 mysite의 url.py파일을 수정해줄것입니다.&lt;img src=&quot;assets/built/images/django-pollsurl2.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;detail를 위한 views를 제작&lt;/h3&gt;
&lt;li&gt;이제 polls의 detail의 views를 제작해볼것입니다.&lt;/li&gt;
&lt;li&gt;아래의 그림과 같이 mysite의 views.py파일을 수정해줄것입니다.&lt;img src=&quot;assets/built/images/django-templatesdetail.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;detail.html 제작&lt;/h3&gt;
&lt;li&gt;detail.html은 index.html에서 띄운 질문을 선택하면 질문에 대한 답변을 &lt;br /&gt;투표할 수 있는 page가 나오도록 해야합니다.&lt;/li&gt;
&lt;li&gt;우리는 question_text을 html에 띄워 선택할수있는 html을 제작할것입니다.&lt;/li&gt;
&lt;li&gt;form tag를 활용하여 아래의 for문의 결과 값을 post형식으로 서버에 전송합니다.&lt;/li&gt;
&lt;li&gt;url 'polls:vote'는 http~8000/polls/vote/라는 의미입니다.&lt;br /&gt;
또한 question.id가 붙은 이유는 나중에 나올 view.vote의 int:bbb에 적용하기 위해서이다.&lt;/li&gt;
&lt;img src=&quot;assets/built/images/django-templatesdetail.PNG&quot; /&gt;
&lt;li&gt;위의 그림과 같이 detail.html를 설정하였습니다. &lt;/li&gt;
&lt;li&gt;위의 결과를 통해 서버를 가동후 &quot;http://127.0.0.1:8000/polls/&quot;에 들어가 질문을 선택하면 아래와 같이 나온다.&lt;img src=&quot;assets/built/images/django-templatesdetailff.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 문자열 Python 강좌(2) - Python 제어문 Python Django - Django 시작 Python Django - Django 투표 프로젝트 model 제작 Python Django - Django 투표 프로젝트 투표 목록 제작 Python Django - Django 투표 프로젝트 투표 보기 제작 Python Django - Django 투표 프로젝트 투표 결과 제작</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python Django - Django 투표 프로젝트 투표 결과 제작</title>
      <link href="http://localhost:4000/python-Django-5" rel="alternate" type="text/html" title="Python Django - Django 투표 프로젝트 투표 결과 제작" />
      <published>2020-08-02T02:40:00+09:00</published>
      <updated>2020-08-02T02:40:00+09:00</updated>
      <id>http://localhost:4000/python-Django-5</id>
      <content type="html" xml:base="http://localhost:4000/python-Django-5">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 문자열&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-1&quot;&gt;Python Django - Django 시작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-2&quot;&gt;Python Django - Django 투표 프로젝트 model 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-3&quot;&gt;Python Django - Django 투표 프로젝트 투표 목록 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-4&quot;&gt;Python Django - Django 투표 프로젝트 투표 보기 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-5&quot;&gt;Python Django - Django 투표 프로젝트 투표 결과 제작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;이 포스트가 투표 프로젝트의 마지막 포스트입니다.&lt;/h3&gt;

&lt;div&gt;
&lt;h3&gt;result를 위한 url제작&lt;/h3&gt;
&lt;li&gt;이제 polls의 result의 url을 제작해볼것입니다.&lt;/li&gt;
&lt;li&gt;아래의 그림과 같이 mysite의 url.py파일을 수정해줄것입니다.&lt;img src=&quot;assets/built/images/django-pollsurl3.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;앞의 detail의 templates의 form에서 정의하였던 question.id가 int:bbb에 들어간다.&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;result를 위한 views를 제작&lt;/h3&gt;
&lt;li&gt;이제 polls의 detail의 views를 제작해볼것입니다.&lt;/li&gt;
&lt;li&gt;아래의 그림과 같이 mysite의 views.py파일을 수정해줄것입니다.&lt;img src=&quot;assets/built/images/django-viewsresult.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;먼저 앞의 index에서 선택하였던 투표 목록을 dic형식으로 가져올것이다.&lt;/li&gt;
&lt;li&gt;그후 선택한 투표 보기의 pk를 추출하여 vote에 저장해줄것이다.&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;result.html 제작&lt;/h3&gt;
&lt;li&gt;result.html은 index.html에서 띄운 질문을 선택한후 질문에 대한 답변을 &lt;br /&gt;detail.html에서 투표하면 그 결과를 수집하고 보여줄수있는 page가 나오도록 해야합니다.&lt;/li&gt;
&lt;li&gt;그후 choice.choice_text를 통해 detail.html에서 선택한 보기를 보여주고&lt;br /&gt;
마지막으로 choice.vote를 통해 지금까지 투표했던 결과를 보여줄것입니다..&lt;/li&gt;
&lt;img src=&quot;assets/built/images/django-templatesresult.PNG&quot; /&gt;
&lt;li&gt;위의 그림과 같이 detail.html를 설정하였습니다. &lt;/li&gt;
&lt;li&gt;위의 결과를 통해 서버를 가동후 &quot;http://127.0.0.1:8000/polls/&quot;에 들어가 질문을 선택하고 보기를 선택하면 아래와 같이 나옵니다.&lt;img src=&quot;assets/built/images/django-templatesresultff.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 문자열 Python 강좌(2) - Python 제어문 Python Django - Django 시작 Python Django - Django 투표 프로젝트 model 제작 Python Django - Django 투표 프로젝트 투표 목록 제작 Python Django - Django 투표 프로젝트 투표 보기 제작 Python Django - Django 투표 프로젝트 투표 결과 제작</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python Django - Django 투표 프로젝트 model 제작</title>
      <link href="http://localhost:4000/python-Django-2" rel="alternate" type="text/html" title="Python Django - Django 투표 프로젝트 model 제작" />
      <published>2020-07-31T02:40:00+09:00</published>
      <updated>2020-07-31T02:40:00+09:00</updated>
      <id>http://localhost:4000/python-Django-2</id>
      <content type="html" xml:base="http://localhost:4000/python-Django-2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 문자열&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-1&quot;&gt;Python Django - Django 시작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-2&quot;&gt;Python Django - Django 투표 프로젝트 model 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-3&quot;&gt;Python Django - Django 투표 프로젝트 투표 목록 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-4&quot;&gt;Python Django - Django 투표 프로젝트 투표 보기 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-5&quot;&gt;Python Django - Django 투표 프로젝트 투표 결과 제작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
이전 포스트에서 제작하였던 polls 폴더에 존재하였던 manage.py를 수정합니다.&lt;br /&gt;&lt;br /&gt;
수정을 수행할 때 파이썬은 객체지향이기 때문에 class를 사용합니다.&lt;br /&gt;&lt;br /&gt;
또한 질문과 보기를 따로 나타내야하기때문에 2개의 class를 제작할것입니다.&lt;/h6&gt;

&lt;div&gt;
&lt;h3&gt;Question class 제작&lt;/h3&gt;
&lt;li&gt;투표의 질문을 작성할 class를 제작합니다.&lt;/li&gt;
&lt;li&gt;예를 들어. 가장 좋아하는 숫자는? 가장 좋아하는 연예인은?과 같은 질문들이 들어갈 수 있는 class입니다.&lt;img src=&quot;assets/built/images/django-questionclass.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;위의 그림과 같이 Question class를 제작합니다. &lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;Choice class 제작&lt;/h3&gt;
&lt;li&gt;투표의 내용을 작성할 class를 제작합니다.&lt;/li&gt;
&lt;li&gt;예를 들어. 가장 좋아하는 숫자는? 라면 1,2,3,4가 들어갈 수 있습니다. &lt;br /&gt;
 가장 좋아하는 연예인은?과 같은 질문들은 송지효, 전소민과 같은 것들이 들어갈 수 있는 class입니다.&lt;img src=&quot;assets/built/images/django-choiceclass.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;위의 그림과 같이 Choice class를 제작합니다. &lt;br /&gt;&lt;/li&gt;
&lt;/div&gt;
&lt;h4&gt; class가 완성되었다면 admin.py를 수정하여 관리할 수 있게 합니다.&lt;br /&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;div&gt;
&lt;h3&gt;admin.py 수정&lt;/h3&gt;
&lt;li&gt;아래의 그림과 같이 admin.py를 수정합니다.&lt;img src=&quot;assets/built/images/django-adminchange.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;데이터베이스에 테이블을 만들려면 SQL구문이 필요합니다.&lt;/li&gt;
&lt;li&gt;이를 위해 C:\Djangotest2/MyFirstWebPoll에서 python manage.py makemigrations와 &lt;br /&gt;
python manage.py migrate를 통해 database를 변경해줍니다.&lt;/li&gt;
&lt;li&gt;마지막으로 이전에 확인하였던 admin 싸이트를 확인해보면 아래와 같이 변경된것을 확인할수있습니다.&lt;img src=&quot;assets/built/images/django-adminclassadd.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 문자열 Python 강좌(2) - Python 제어문 Python Django - Django 시작 Python Django - Django 투표 프로젝트 model 제작 Python Django - Django 투표 프로젝트 투표 목록 제작 Python Django - Django 투표 프로젝트 투표 보기 제작 Python Django - Django 투표 프로젝트 투표 결과 제작 이전 포스트에서 제작하였던 polls 폴더에 존재하였던 manage.py를 수정합니다. 수정을 수행할 때 파이썬은 객체지향이기 때문에 class를 사용합니다. 또한 질문과 보기를 따로 나타내야하기때문에 2개의 class를 제작할것입니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python Django - Django 시작</title>
      <link href="http://localhost:4000/python-Django-1" rel="alternate" type="text/html" title="Python Django - Django 시작" />
      <published>2020-07-31T01:40:00+09:00</published>
      <updated>2020-07-31T01:40:00+09:00</updated>
      <id>http://localhost:4000/python-Django-1</id>
      <content type="html" xml:base="http://localhost:4000/python-Django-1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 문자열&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-1&quot;&gt;Python Django - Django 시작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-2&quot;&gt;Python Django - Django 투표 프로젝트 model 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-3&quot;&gt;Python Django - Django 투표 프로젝트 투표 목록 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-4&quot;&gt;Python Django - Django 투표 프로젝트 투표 보기 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-5&quot;&gt;Python Django - Django 투표 프로젝트 투표 결과 제작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Django는 파이썬으로 만들어진 오픈소스 웹 어플리케이션을 만들 쉽게 작성할 수 있도록 도와주는 Framework입니다.&lt;/p&gt;
&lt;div&gt;
&lt;h3&gt;라이브러리(library):&lt;/h3&gt; &lt;li&gt;특수한 처리를 하기 위해서 만들어 놓은 함수집합 jQuery도 라이브러리라고 볼 수 있다.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;장점 : 내가 모든걸 다 작성할 필요가 없다!&lt;/li&gt;
&lt;li&gt;단점(특징) : 전체 프로그램의 로직을 담당하지는 않다.&lt;br /&gt;예)jquery를 이용해서 영화정보를 출력하는 문제를 구현하는 경우 사람마다 구현이 제각각.. (유지보수 x)&lt;/li&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3&gt;프레임워크(Framework):&lt;/h3&gt;&lt;li&gt;프로그램의 전체적인 로직부분 (구조)이 이미 구현되어있다.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;위의 이유로 프레임워크를 사용할때는 기본적으로 사용되는 소스코드가 제공된다. (스케폴딩-scaffolding)&lt;/li&gt;
&lt;li&gt;유지보수성이 좋아진다. 하지만 처음에 프레임워크의 동작원리를 이해하는 작업이 필요한 단점이 있다.&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;Django는 MVT model&lt;/h3&gt; MVT는 Model, View, Template
&lt;li&gt;Model은 데이터베이스 처리 (어떠한 형태의 데이터를 사용할것인가)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;View는 로직을 담당하여 사용자의 입력을 받아서 작업을 할수있는 프로세스에 연결하는 작업을 수행&lt;/li&gt;
&lt;li&gt;Tamplate는 클라이언트에게 보여줄 화면을 담당&lt;/li&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;h3&gt;Django 설치 과정&lt;/h3&gt;
&lt;li&gt;cmd 창에 pip install Django를 통해 Django 설치 &lt;img src=&quot;assets/built/images/django-install.PNG&quot; /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;C:\Djangotest2에서 django-admin startproject mysite를 수행 &lt;img src=&quot;assets/built/images/django-mysite.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;C:\Djangotest2\mysite의 내부에도 mysite가 존재하기 때문에 외부의 폴더이름을 MyFirstWebPoll로 변경&lt;/li&gt;
&lt;li&gt;C:\Djangotest2\MyFirstWebPoll에서 python manage.py startapp polls를 입력하여 poll이라는 applicaiton을 생성
&lt;img src=&quot;assets/built/images/django-application.PNG&quot; /&gt;&lt;/li&gt;

&lt;li&gt;파이참에서 settings.py의 INSTALLED_APPS에 위에서 설치한 polls을 추가해주어야한다.&lt;br /&gt; 만약 추가하지않으면 프로젝트가 어플리케이션을 인식하지못한다.  &lt;img src=&quot;assets/built/images/django-settingapp.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;C:/Djangotest2/MyFirstWebPoll에서 python manage.py migrate를 수행하면 db.sqlite3가 생성된다. &lt;img src=&quot;assets/built/images/django-migrate.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;C:/Djangotest2/MyFirstWebPoll에서 python manage.py runserver를 수행하면 서버가 정상적으로 작동하는 것을 확인할수있다. &lt;img src=&quot;assets/built/images/django-serverrun.PNG&quot; /&gt;&lt;/li&gt;
&lt;li&gt;C:/Djangotest2/MyFirstWebPoll에서 python manage.py createsuperuser를 수행하면 아이디와 비밀번호를 생성한후 &lt;br /&gt;
http://localhost:8000/admin에 들어가면 관리자 모드를 확인할수있다 &lt;img src=&quot;assets/built/images/django-admin.PNG&quot; /&gt;&lt;/li&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 문자열 Python 강좌(2) - Python 제어문 Python Django - Django 시작 Python Django - Django 투표 프로젝트 model 제작 Python Django - Django 투표 프로젝트 투표 목록 제작 Python Django - Django 투표 프로젝트 투표 보기 제작 Python Django - Django 투표 프로젝트 투표 결과 제작</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python 강좌(2) - Python 제어문</title>
      <link href="http://localhost:4000/python-control-statement" rel="alternate" type="text/html" title="Python 강좌(2) - Python 제어문" />
      <published>2020-07-31T01:40:00+09:00</published>
      <updated>2020-07-31T01:40:00+09:00</updated>
      <id>http://localhost:4000/python-control-statement</id>
      <content type="html" xml:base="http://localhost:4000/python-control-statement">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 문자열&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-1&quot;&gt;Python Django - Django 시작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-2&quot;&gt;Python Django - Django 투표 프로젝트 model 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-3&quot;&gt;Python Django - Django 투표 프로젝트 투표 목록 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-4&quot;&gt;Python Django - Django 투표 프로젝트 투표 보기 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-5&quot;&gt;Python Django - Django 투표 프로젝트 투표 결과 제작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이글은 파이썬 제어문에 관한 내용입니다!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 문자열 Python 강좌(2) - Python 제어문 Python Django - Django 시작 Python Django - Django 투표 프로젝트 model 제작 Python Django - Django 투표 프로젝트 투표 목록 제작 Python Django - Django 투표 프로젝트 투표 보기 제작 Python Django - Django 투표 프로젝트 투표 결과 제작</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python 강좌(1) - Python 문자열</title>
      <link href="http://localhost:4000/python-basic" rel="alternate" type="text/html" title="Python 강좌(1) - Python 문자열" />
      <published>2020-07-24T01:40:00+09:00</published>
      <updated>2020-07-24T01:40:00+09:00</updated>
      <id>http://localhost:4000/python-basic</id>
      <content type="html" xml:base="http://localhost:4000/python-basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 문자열&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-1&quot;&gt;Python Django - Django 시작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-2&quot;&gt;Python Django - Django 투표 프로젝트 model 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-3&quot;&gt;Python Django - Django 투표 프로젝트 투표 목록 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-4&quot;&gt;Python Django - Django 투표 프로젝트 투표 보기 제작&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-Django-5&quot;&gt;Python Django - Django 투표 프로젝트 투표 결과 제작&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 style=&quot;color: goldenrod&quot;&gt;&lt;u&gt;파이썬의 문자열에 관련된 포스트입니다.&lt;/u&gt;&lt;/h1&gt;

&lt;div&gt;
기본적으로 파이썬의 문법과 함수들에 대하여 작성할 계획입니다. 
&lt;br /&gt; 파이썬의 기본 문자열에 대한 함수나 문법에 대하여 포스팅할 계획입니다.&lt;br /&gt;
&lt;br /&gt;
    &lt;ol&gt;    
        &lt;li&gt;&lt;h5&gt;문자 확장열&lt;/h5&gt;&lt;div&gt;문자 확장열이란 문자 내부에 담기힘든 것들을 &quot;/&quot; 뒤에 특별한 기호를 작성하여 표기합니다.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
            &lt;ul&gt;
                &lt;li&gt;\n는 개행으로 엔터를 의미합니다. &lt;br /&gt; 
                예를들어  &lt;br /&gt;&quot;안녕\n하세요.&quot;는 &lt;br /&gt;안녕&lt;br /&gt;하세요 라고 출력됩니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                &lt;li&gt;\t는 탭을 의미합니다.&lt;br /&gt; 예를들어  &lt;br /&gt;
                &quot;안녕\t하세요.&quot;는 &lt;br /&gt;안녕    하세요 라고 출력됩니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&amp;lt;/li&amp;gt; 
                &lt;li&gt;\&quot;은 큰따옴표 입력을 의미합니다.&lt;br /&gt;
                 예를들어  &lt;br /&gt;&quot;안녕&quot;하세요.&quot;는 오류가 &quot;&quot;의 내부에 &quot;가이 있기 때문에 오류가 발생합니다. &lt;br /&gt; 하지만 &quot;안녕\&quot;하세요&quot;로 작성한다면 오류가 발생하지 않고 안녕&quot;하세요라고 출력됩니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                &lt;li&gt;\'은 작은따옴표 입력를 의미합니다.&lt;br /&gt;
                 위와 마찬가지로  &lt;br /&gt;'안녕'하세요.'는 오류가 ''의 내부에 '가이 있기 때문에 오류가 발생합니다. &lt;br /&gt; 하지만 '안녕\'하세요'로 작성한다면 오류가 발생하지 않고 안녕'하세요라고 출력됩니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                &lt;li&gt;\\은 \입력을 의미합니다.&lt;br /&gt; 
                예를들어  &lt;br /&gt;&quot;안녕\하세요.&quot;라고 쓰는 경우 특수문자인(\) 뒤에 문자가 없어 오류가 발생합니다.&lt;br /&gt;하지만 &quot;안녕\\하세요&quot;로 작성한다면 안녕\하세요라고 출력됩니다..&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;h5&gt;문자열 메서드&lt;/h5&gt;&lt;div&gt;문자열은 수치열에 비하여 복잡하기 때문에 다양한 함수를 사용하여 관리합니다.&lt;br /&gt;기본적으로 함수앞에 is가 붙으면 대답은 bool형식으로 출력됩니다.&lt;br /&gt;하지만 이 포스트에서는 이러한 함수는 작성하지 않겠습니다.&lt;br /&gt;&lt;br /&gt; &lt;/div&gt;
                    &lt;ul&gt;
                        &lt;li&gt; .lower() .upper() &lt;br /&gt;
                         lower는 문자열을 소문자로 upper는 문자열을 대문자로 변환해줍니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt; .swapcase() &lt;br /&gt;
                         swapcase는 문자열의 내용 중 소문자는 대문자로 대문자는 소문자로 변환해줍니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt; .capitalize() .title() &lt;br /&gt; 
                        capitalize는 &lt;u&gt;문자열의 첫글자만&lt;/u&gt;을 대문자로 변경하고 나머지 문자열을 소문자로 변환해줍니다.&lt;br /&gt;
                        title는 문자열 내부의 &lt;u&gt;모든 단어의 첫글자&lt;/u&gt;를 대문자로 변경하고 나머지를 소문자로 변환합니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt; .strip() .lstrip() .rstrip()&lt;br /&gt; strip은 좌우의 공백을 전부, lstrip은 왼쪽, rstrip은 오른쪽의 공백을 제거해줍니다. &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt; .split(a) &lt;br /&gt;
                         split은 문자열을 a를 기점으로 분할해준다.&lt;br /&gt;예를 들어 s=&quot;치킨 피자,탕수육 콜라&quot;일 때 c=s.split(,)을 사용하면 c=[&quot;치킨 피자&quot;,&quot;탕수육 콜라&quot;]라는 리스트가 출력된다.
                        &lt;br /&gt;또한 c=s.split( )를 사용하면 c=[&quot;치킨&quot;,&quot;피자 탕수육&quot;,&quot;콜라&quot;]라는 리스트가 출력된다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt; .join() &lt;br /&gt; 
                        join함수는 위의 함수들과 조금 다른다.a가 &quot;-&quot;인 문자열이고 b가 [&quot;치킨&quot;,&quot;피자&quot;,&quot;탕수육&quot;,&quot;콜라&quot;]인 리스트일 때&lt;br /&gt;
                        a.join(b)를 사용하면 &quot;치킨-피자-탕수육-콜라&quot;인 문자열이 출력된다.&lt;br /&gt;또는 a는 위와 같고 b가 &quot;대한민국&quot;인 문자열일 경우 &quot;대-한-민-국&quot;이 출력된다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt; .center(a) .ljust(a) .rjust(a)&lt;br /&gt;
                         a에 인수를 넣으면 center는 문자열의 폭이 a이고 중간에 문자를 넣어준다. &lt;br /&gt;
                        ljust는 폭 a에서 문자를 왼쪽에 배치, rjust는 폭 a에서 문자를 오른쪽에 배치해준다. &lt;br /&gt;만약 문자열이 a보다 길다면 a의 크기를 무시하고 전부 입력한다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;             
             &lt;/ul&gt;                                          
        &lt;/li&gt;
        &lt;li&gt;&lt;h5&gt;문자열 포멧팅&lt;/h5&gt;&lt;div&gt;포멧팅은 문자열에 다른 정보를 넣어주는 행위입니다.&lt;br /&gt;기본적으로는 (&quot;나는 {}살, 키는 {}cm 이름은{}입니다.&quot;.format(age,height,name))이러한 형식으로 사용됩니다.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
            &lt;ul&gt;
                &lt;li&gt; 공백 입력&lt;br /&gt;
                만약 포맷팅의 결과값에 공백을 입력하고 싶다면 (&quot;나는 {0:10d}살, 키는 {1:5f}cm 이름은{2:5s}입니다.&quot;.format(age,height,name))처럼 사용하면된다.&lt;br /&gt;
                이때 포맷팅 내부에 들어가있는 d는 정수, f는 실수, s는 문자를 의미하고 이들 앞의 숫자가 문자열을 포함하는 칸의 크기이다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;  
                &lt;li&gt; 공백 정렬&lt;br /&gt;
                위에서 처럼 공백을 생성하였지만 문자열은 기본적으로 왼쪽 정렬이된다. &lt;br /&gt;이러한 것을 수정하고싶다면 (&quot;나는 {0:^10d}살, 키는 {1:&amp;gt;5f}cm 이름은{2:&amp;lt;5s}입니다.&quot;.format(age,height,name))처럼 사용하면된다.&lt;br /&gt;
                이때 포맷팅 내부에 들어가있는 &quot;^&quot;는 가운대 정열, &quot;&amp;gt;&quot;는 오른쪽, &quot;&amp;lt;&quot;는 왼쪽 정렬를 의미한다. &lt;br /&gt;&lt;br /&gt;&lt;/li&gt; 
                &lt;li&gt; 공백 내용 입력&lt;br /&gt;
                위처럼 포맷팅 내부에 수를 삽입하면 공백이 빈칸으로 생성된다. &lt;br /&gt;
                만약 빈칸이 아닌 문자를 입력하고싶다면 (&quot;나는 {0:$^10d}살, 키는 {1:!&amp;gt;10.2f}cm 이름은{2:0&amp;lt;5s}입니다.&quot;.format(age,height,name))처럼 사용하면된다.&lt;br /&gt;
                위에서 실수의 경우 {1:!&amp;gt;10.2f}에서 5칸의 공백을 소수점 2번째까지의 수로 오른쪽 정렬로 채우고 나머지칸은 !로 채워라 라는 의미이다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
            &lt;/ul&gt;  
        &lt;/li&gt;        
    &lt;/ol&gt;
&lt;/div&gt;
&lt;h4&gt; 이번 포스트에서는 문자열에 들어가거나 사용되는 함수에 대하여 작성해보았다. 문자열의 경우 문자 표현 뿐만 아니라 제어를 위하여 list의 융합을 위해 사용되기도한다.
&lt;/h4&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 문자열 Python 강좌(2) - Python 제어문 Python Django - Django 시작 Python Django - Django 투표 프로젝트 model 제작 Python Django - Django 투표 프로젝트 투표 목록 제작 Python Django - Django 투표 프로젝트 투표 보기 제작 Python Django - Django 투표 프로젝트 투표 결과 제작</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">AI 강좌(1) - AI 기본</title>
      <link href="http://localhost:4000/AI-basic" rel="alternate" type="text/html" title="AI 강좌(1) - AI 기본" />
      <published>2020-07-24T01:40:00+09:00</published>
      <updated>2020-07-24T01:40:00+09:00</updated>
      <id>http://localhost:4000/AI-basic</id>
      <content type="html" xml:base="http://localhost:4000/AI-basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./AI-basic&quot;&gt;AI 강좌(1) - AI 기본 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이글은 파이썬 basic에 관한 내용입니다!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="AI" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. AI 강좌(1) - AI 기본 이글은 파이썬 basic에 관한 내용입니다!</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Vehicle 강좌(1) - vehicle 기본</title>
      <link href="http://localhost:4000/vehicle-basic" rel="alternate" type="text/html" title="Vehicle 강좌(1) - vehicle 기본" />
      <published>2020-07-24T01:40:00+09:00</published>
      <updated>2020-07-24T01:40:00+09:00</updated>
      <id>http://localhost:4000/vehicle-basic</id>
      <content type="html" xml:base="http://localhost:4000/vehicle-basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./vehicle-basic&quot;&gt;Vehicle 강좌(1) - vehicle 기본 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이글은 vehicle에 관한 내용입니다!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HeoHyoYeong</name>
        
        
      </author>

      

      
        <category term="vehicle" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Vehicle 강좌(1) - vehicle 기본 이글은 vehicle에 관한 내용입니다!</summary>
      

      
      
    </entry>
  
</feed>
